#!/system/bin/sh
if [ -e /sdcard/plaintweak ]
then
DATE=$(date +"%m"-"%d"-"%y")
mkdir -p /sdcard/plain-tweak/$DATE
mv /sdcard/plaintweak /sdcard/plain-tweak/$DATE/plaintweak
fi
extsd='sdcard'
echo "Max CPU Clock selection:"
echo 
frequencies=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies | sed 's/ /\n/g' | sed '$d' | tail -n 5)
# Load text file lines into a bash array.
OLD_IFS=$IFS
IFS=$'\n'
let line_counter=0
for line in $frequencies; do
	let line_counter=$(($line_counter+1))
	printf "${line_counter}) ${line}\n"
done
IFS=$OLD_IFS
echo "Choose number selection[0 = default or 99 = exit]:"
read input
if [ "$input" == "99" ];then
exit
fi
if [ "$input" -gt "$line_counter" ];then
echo "Invalid selection: Aborting script"
exit
fi
if [ "$input" != "0" ];then
maxkhz=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies | sed 's/ /\n/g' | sed '$d' | tail -n 5 | head -n $input | tail -n 1)
echo 'setprop maxkhz '$maxkhz > /$extsd/plaintweak
fi
clear
echo "Min CPU Clock selection:"
echo 
frequencies=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies | sed 's/ /\n/g' | sed '$d' | head -n 4)
# Load text file lines into a bash array.
OLD_IFS=$IFS
IFS=$'\n'
let line_counter=0
for line in $frequencies; do
	let line_counter=$(($line_counter+1))
	printf "${line_counter}) ${line}\n"
done
IFS=$OLD_IFS
echo "Choose number selection[0 = default or 99 = exit]:"
read input
if [ "$input" == "99" ];then
exit
fi
if [ "$input" -gt "$line_counter" ];then
echo "Invalid selection: Aborting script"
exit
fi
if [ "$input" != "0" ];then
minkhz=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies | sed 's/ /\n/g' | sed '$d' | head -n 4 | head -n $input | tail -n 1)
echo 'setprop minkhz '$minkhz >> /$extsd/plaintweak
fi
clear
echo "Governor selection:"
echo
governors=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors | sed 's/ /\n/g' | sed '$d')
# Load text file lines into a bash array & print as a menu.
OLD_IFS=$IFS
IFS=$'\n'
let line_counter=0
for line in $governors; do
	let line_counter=$(($line_counter+1))
	printf "${line_counter}) ${line}\n"
done
IFS=$OLD_IFS
echo "Choose number selection[0 = default or 99 = exit]:"
read input
if [ "$input" == "99" ];then
exit
fi
if [ "$input" -gt "$line_counter" ];then
echo "Invalid selection: Aborting script"
exit
fi
if [ "$input" != "0" ];then
gov=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors | sed 's/ /\n/g' | sed '$d' | head -n $input | tail -n 1)
echo 'setprop gov '$gov >> /$extsd/plaintweak
fi
clear
echo "IO Scheduler selection:"
echo 
schedulers=$(cat /sys/block/mmcblk0/queue/scheduler | sed 's/[[]//g' | sed 's/[]]//g' | sed 's/ /\n/g' | sed '$d')
# Load text file lines into a bash array.
OLD_IFS=$IFS
IFS=$'\n'
let line_counter=0
for line in $schedulers; do
	let line_counter=$(($line_counter+1))
	printf "${line_counter}) ${line}\n"
done
IFS=$OLD_IFS
echo "Choose number selection[0 = default or 99 = exit]:"
read input
if [ "$input" == "99" ];then
exit
fi
if [ "$input" -gt "$line_counter" ];then
echo "Invalid selection: Aborting script"
exit
fi
if [ "$input" != "0" ];then
scheduler=$(cat /sys/block/mmcblk0/queue/scheduler | sed 's/[[]//g' | sed 's/[]]//g' | sed 's/ /\n/g' | sed '$d' | sed 's/ //g' | head -n $input | tail -n 1)
echo 'setprop scheduler '$scheduler >> /$extsd/plaintweak
fi
clear
clear
echo "TCP Congestion Control selection:"
echo 
tcpcong=$(cat /proc/sys/net/ipv4/tcp_available_congestion_control | sed 's/ /\n/g')
# Load text file lines into a bash array.
OLD_IFS=$IFS
IFS=$'\n'
let line_counter=0
for line in $tcpcong; do
	let line_counter=$(($line_counter+1))
	printf "${line_counter}) ${line}\n"
done
IFS=$OLD_IFS
echo "Choose number selection[0 = default or 99 = exit]:"
read input
if [ "$input" == "99" ];then
exit
fi
if [ "$input" -gt "$line_counter" ];then
echo "Invalid selection: Aborting script"
exit
fi
if [ "$input" != "0" ];then
tcpcong=$(cat /proc/sys/net/ipv4/tcp_available_congestion_control | sed 's/ /\n/g' | head -n $input | tail -n 1)
echo 'setprop tcpcong '$tcpcong >> /$extsd/plaintweak
fi
. /system/etc/init.plain.kerneltweak.sh
