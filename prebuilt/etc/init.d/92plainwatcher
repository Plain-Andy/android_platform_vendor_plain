#!/system/bin/sh
setprop stocktcpcong $(cat /proc/sys/net/ipv4/tcp_congestion_control)
setprop stockscheduler $(cat /sys/block/mmcblk0/queue/scheduler | sed 's/.*[[]//g' | sed 's/[]].*//g')
setprop stockgov $(ls /sys/devices/system/cpu/cpufreq)
setprop stockminkhz $(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq)
setprop stockmaxkhz $(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq)
cmd='sh /system/etc/init.plain.kerneltweak.sh'
sha=0
maindensity(){
if [ $customdensity != $(getprop ro.sf.lcd_density) ]
	then
	comparedensity
	enabledensity
fi
}
sourceconfigdensity(){
	sdcustomdensity=$(grep "customdensity=" /sdcard/customdensity  | sed 's/customdensity*.//')
	customdensity=$(grep "customdensity=" /vendor/overlay/local.prop  | sed 's/customdensity*.//')
	if [ -z $customdensity ]
	then
	. /sdcard/customdensity
	cat /sdcard/customdensity >> /vendor/overlay/local.prop
	else
	propcomparedensity	
	fi
	}
enabledensity(){
	setprop customdensity $customdensity
	}
disabledensity(){
	setprop customdensity $(getprop ro.sf.lcd_density)
	sed -i '/customdensity=/d' /vendor/overlay/local.prop
	}
comparedensity(){
	if [ $customdensity -gt $(getprop ro.sf.lcd_density) ]
	then
		compare=$(expr $customdensity - $(getprop ro.sf.lcd_density) )
	else
		compare=$(expr $(getprop ro.sf.lcd_density) - $customdensity )
	fi
		echo "Comparison is "$compare
		setprop comparedensity $compare
	if [ 180 -gt $customdensity ]
	then
		echo "Aborting; Custom density is less than 180"
		exit
	fi
	if [ $(getprop comparedensity) -gt 180 ]
	then
		echo "Aborting; Density comparison is more than 180"
		exit
	fi
	}
propcomparedensity(){
	sdcustomdensity=$(grep "customdensity=" /sdcard/customdensity  | sed 's/customdensity*.//')
	customdensity=$(grep "customdensity=" /vendor/overlay/local.prop  | sed 's/customdensity*.//')
	if [ -z $sdcustomdensity ]
	then
	sed -i '/customdensity=/d' /vendor/overlay/local.prop
	disabledensity
	echo 'customdensity='$(getprop customdensity)  > /sdcard/customdensity
	. /sdcard/customdensity
	sdcustomdensity=$(grep "customdensity=" /sdcard/customdensity  | sed 's/customdensity*.//')
	fi
	if [ $customdensity != $sdcustomdensity ]
	then
	sed -i '/customdensity=/d' /vendor/overlay/local.prop
	echo 'customdensity='$sdcustomdensity >> /vendor/overlay/local.prop
	fi
	}
maindensity
if [ -z $(getprop updateinterval) ]
then
setprop updateinterval 10
fi
while [ -z $(getprop enable_plaintweak) ]
do
  sleep $(getprop updateinterval)
done # waiting for boot complete
$cmd
echo "Plain-tweak watcher is online"
#Using original watch scripting from https://gist.github.com/mikesmullin/6401258
path=/sdcard/plaintweak
update_sha() {
  sha=`sha1sum $path`
}
update_sha
previous_sha=$sha
build() {
  echo "Change detected; Invoking /system/etc/init.plain.kerneltweak.sh"
  $cmd
}
coreset2(){
if [ -d /sys/devices/system/cpu/cpu1/cpufreq ]
then
	echo $(getprop maxkhz) > /sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq
	echo $(getprop minkhz) > /sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq
	echo $(getprop gov) > /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor
fi

if [ -d /sys/devices/system/cpu/cpu2/cpufreq ]
then
	if [ -z $(getprop maxkhz2) ]
	then
		echo $(getprop maxkhz) > /sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
	else
		echo $(getprop maxkhz2) > /sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
	fi
	if [ -z $(getprop minkhz2) ]
	then
		echo $(getprop minkhz) > /sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq
	else
		echo $(getprop minkhz2) > /sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq
	fi
	if [ -z $(getprop gov2) ]
	then
		echo $(getprop gov) > /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
	else
		echo $(getprop gov2) > /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor
	fi
fi

if [ -d /sys/devices/system/cpu/cpu3/cpufreq ]
then
	if [ -z $(getprop maxkhz2) ]
	then
		echo $(getprop maxkhz) > /sys/devices/system/cpu/cpu3/cpufreq/scaling_max_freq
	else
		echo $(getprop maxkhz2) > /sys/devices/system/cpu/cpu3/cpufreq/scaling_max_freq
	fi

	if [ -z $(getprop minkhz2) ]
	then
		echo $(getprop minkhz) > /sys/devices/system/cpu/cpu3/cpufreq/scaling_min_freq
	else
		echo $(getprop minkhz2) > /sys/devices/system/cpu/cpu3/cpufreq/scaling_min_freq
	fi
	if [ -z $(getprop gov2) ]
	then
		echo $(getprop gov) > /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor
	else
		echo $(getprop gov2) > /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor
	fi
fi	
}
compare() {
  update_sha
  if [[ $sha != $previous_sha ]] ; then
    build
    previous_sha=$sha
  fi
  coreset2
}
trap build SIGINT
trap exit SIGQUIT
while true; do
if [ $(getprop enable_plaintweak) != "0" ]; then
  compare
  sourceconfigdensity
  else
  build
  disabledensity
fi
  sleep $(getprop updateinterval)
  sed -i '/enable_plaintweak/d' /vendor/overlay/local.prop
  echo 'enable_plaintweak='$(getprop enable_plaintweak) >> /vendor/overlay/local.prop
done
